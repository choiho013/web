<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 패키지와 인터페이스 이름 반드시 선언해야함. -->
<mapper namespace="com.itwill.spring2.repository.PostDao"> 
    <!-- 영속성 프레임워크 MyBatis에서 실행할 SQL 문장들을 선언하는 파일 -->
    
<!--     매퍼의 네임스페이스 이름과 인터페이스와 똑같은 이름으로 만들어져 있어야 함 -->
<!--     메서드이름과 id와 같아야함 -->
    <!-- 도메인의 별명 alias가 있기 때문에 을 매퍼 resultType에 작성할 수 있다. -->
    
    <!-- 포스트 목록 보기에서 사용할 메서드 이름과 SQL 문장 -->
    <select id="selectOrderByIdDesc" resultType="Post">
        select * from posts order by id desc
    </select>
    
    <!-- 포스트 상세보기에서 사용할 메서드 이름과 SQL 문장 -->
    <!-- 메서드의 파라미터의 id를 가져다 쓰겠다는 의미 -->
    <!-- select에서는 resultType를 반드시 지정해줘야함. -->
    <select id="selectById" resultType="Post">
        select * from posts where id = #{id}
    </select>
    
    <!-- 포스트 새글 작성에서 사용할 메서드 이름과 SQL 문장 -->
    <!-- 샾은 바인딩 파라미터(? 로 쓰는 부분) -->
    <insert id="insertPost">
        insert into posts (title, content, author, created_time, modified_time)
        values (#{title}, #{content}, #{author}, systimestamp, systimestamp)
    </insert>
    
    <!-- 포스트 업데이트에서 사용할 메서드 이름과 SQL 문장 -->
    <update id="updatePost">
        update posts 
        set title = #{title}, content = #{content}, modified_time = systimestamp 
        where id = #{id}
    </update>
    
    <!-- 포스트 삭제하기에서 사용할 메서드 이름과 SQL 문장 -->
    <delete id="deletePost">
        delete from posts where id = #{id}
    </delete>
    
    <!-- 포스트 검색(카테고리, 키워드)에서 사용할 메서드 이름과 SQL 문장 
        search 메서드의 아규먼트, 필드 를 찾을수 있음. -->
    <!-- Dynamic SQL -->
    <select id="search" resultType="Post">
        <bind name="searchKeyword" value="'%' + keyword + '%'"/>
        select * from posts
        <where>
            <choose>
                <when test='category.equals("t")'>
                    upper(title) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("c")'>
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("tc")'>
                    upper(title) like upper(#{searchKeyword})
                    or
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("a")'>
                    upper(author) like upper(#{searchKeyword})
                </when>
            </choose>
        </where>
        order by id desc
    </select>
</mapper>
